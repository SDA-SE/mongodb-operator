plugins {
  id "jacoco"
  id "idea"
  id "java"
  id "com.diffplug.spotless" version "5.12.4"
  id "com.google.cloud.tools.jib" version "3.0.0"
}

repositories {
  mavenCentral()
}

group "com.sdase.k8s.operator.mongodb"

idea.module.inheritOutputDirs = true

version = System.getenv('SEMANTIC_VERSION')

sourceCompatibility = JavaVersion.VERSION_11
tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

jib {
  container.ports = ['8081']
  container.args = []
  from.image = 'quay.io/sdase/openjdk-runtime:11-hotspot-distroless'
  container.user = 10001
  to.image = "$rootProject.name:latest"
}

project.ext {
  mongoDbDriverVersion = "4.2.3"
  slf4jVersion = "1.7.30"
  operatorFrameworkVersion = "1.9.0"
}

dependencies {

  implementation enforcedPlatform("com.fasterxml.jackson:jackson-bom:2.12.3")
  annotationProcessor enforcedPlatform("com.fasterxml.jackson:jackson-bom:2.12.3")

  implementation "io.javaoperatorsdk:operator-framework:${operatorFrameworkVersion}", {
    // version conflict within operator framework
    exclude group: "com.google.guava", module: "guava"
  }
  implementation "com.google.guava:guava:27.0.1-jre"
  annotationProcessor "io.javaoperatorsdk:operator-framework:${operatorFrameworkVersion}", {
    // version conflict within operator framework
    exclude group: "com.google.guava", module: "guava"
  }
  annotationProcessor "com.google.guava:guava:27.0.1-jre"


  // implementation "io.fabric8:kubernetes-client:${fabric8Version}"
  implementation "org.mongodb:mongodb-driver-sync:${mongoDbDriverVersion}"
  implementation "org.slf4j:slf4j-simple:${slf4jVersion}"
  implementation "org.hibernate.validator:hibernate-validator:7.0.0.Final"
  implementation "jakarta.el:jakarta.el-api:4.0.0"
  implementation "org.bouncycastle:bcpkix-jdk15on:1.68"
  implementation "com.sparkjava:spark-core:2.9.3", {
    exclude group: "org.slf4j"
  }


  testImplementation enforcedPlatform("org.junit:junit-bom:5.8.2")
  testImplementation "org.junit.jupiter:junit-jupiter"
  testImplementation "org.junit-pioneer:junit-pioneer:1.4.2"
  testImplementation "org.assertj:assertj-core:3.21.0"
  testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo:3.0.0"
  testImplementation "org.mongodb:mongodb-driver-legacy:${mongoDbDriverVersion}"
  testImplementation "org.mockito:mockito-junit-jupiter:2.23.4"
  testImplementation "uk.org.webcompere:system-stubs-jupiter:1.2.0"
  testImplementation 'org.awaitility:awaitility:4.1.0'
  testImplementation "io.fabric8:kubernetes-server-mock:5.4.1", {
    exclude group: "com.squareup.okhttp3", module: "okhttp"
  }
}

test {
  useJUnitPlatform()
}

wrapper { gradleVersion = '6.5' }

spotless {
  java { googleJavaFormat('1.9') }
  enforceCheck = false
}

configurations.all {
  resolutionStrategy {
    // fail eagerly on version conflict (includes transitive dependencies)
    // e.g. multiple different versions of the same dependency (group and name are equal)
    failOnVersionConflict()
  }
}

// begin config for SonarCloud
jacocoTestReport {
  reports {
    xml.enabled true
  }
}

// copy all dependency jars for SonarCloud
def copyRuntimeDependenciesToLib = project.task("copyRuntimeDependenciesToLib", type: Copy) {
  from(project.configurations.default)
  into("${project.buildDir}/output/runtime")
}

def copyTestRuntimeDependenciesToLib = project.task("copyTestRuntimeDependenciesToLib", type: Copy) {
  from(project.configurations.testRuntime)
  into("${project.buildDir}/output/testRuntime")
}

project.tasks.findByName("compileJava").finalizedBy(copyRuntimeDependenciesToLib)
project.tasks.findByName("test").finalizedBy(copyTestRuntimeDependenciesToLib)
// end config for SonarCloud