---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: mongodb-operator
  title: MongoDB Operator
  description:
    $text: docs/index.md
  tags:
    - kubernetes
    - operator
  annotations:
    backstage.io/techdocs-ref: dir:.
    defectdojo.org/product-name: "sdadev | mongodb-operator | quay.io/sdase/mongodb-operator"
    defectdojo.org/branch-name: "quay.io/sdase/mongodb-operator"
  links:
    - url: https://medium.com/sda-se/kubernetes-operator-to-the-rescue-how-our-own-mongodb-operator-improved-our-deployments-6d5ba3324abc
      title: Kubernetes Operator to the rescue. How our own MongoDB Operator improved our deployments.
spec:
  type: service
  lifecycle: experimental
  owner: bedrock
  providesApis:
    - mongodbs-crd
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: mongodbs-crd
  description: CRD to request a MongoDB database from the mongodb-operator.
  tags:
    - kubernetes
    - operator
  annotations:
    sda.se/summary: |
      A MongoDB custom resource initiates a request for a database for the namespace where it
      is located.
      A database user with access to a database named `[metadata.namespace]_[metadata.name]`
      will be created by the MongoDB Controller in an already existing MongoDB instance.
      A secret containing username and a random password with the same `metadata.name` as this
      custom resource will be provided in the same namespace.
      Currently the database host, port, options and other parameters than username and
      password must be set according the MongoDB instance configured for the cluster in the
      MongoDB Controller.
      The secret and the user will be removed, when this custom resource is deleted.
      The database will be deleted if `spec.database.pruneAfterDelete` is `true`.
spec:
  # Although not officially supported, we can use this type. The spec will be shown as source.
  type: crd
  owner: bedrock
  lifecycle: experimental
  definition:
    $text: ./kustomize/bases/operator/mongodbs-crd.yaml
