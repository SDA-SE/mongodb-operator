apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: mongodbs.persistence.sda-se.com
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: persistence.sda-se.com
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1beta1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                database:
                  description: Specifies handling of the database
                  type: object
                  properties:
                    pruneAfterDelete:
                      description: |
                        If the database **including it's content** should be deleted after the
                        custom resource is removed.
                        This does not affect deletion of the provided secret and the created
                        database user.
                        The secret and the user will be always removed.

                        In development cluster it is useful to clean up databases, especially of PR
                        deployments to keep the database instance small.
                        In a production environment you most likely want to avoid deleting the
                        content accidentially.
                      type: boolean
                      default: false
                secret:
                  description: Specifies how the secret should be created.
                  type: object
                  properties:
                    usernameKey:
                      description: |
                        The name of the key in the `data` section where the username is located.
                      type: string
                      default: username
                      example: MONGODB_USERNAME
                    passwordKey:
                      description: |
                        The name of the key in the `data` section where the password is located.
                      type: string
                      default: password
                      example: MONGODB_PASSWORD
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: mongodbs
    # singular name to be used as an alias on the CLI and for display
    singular: mongodb
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: MongoDb
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
      - mongo
